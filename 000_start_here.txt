
# OmniTrade Platform - Project Overview

Welcome to the OmniTrade Platform development project!

## Current Status: Phase 3 - Backend Infrastructure

We have completed Phase 1 (Project Setup and Planning) and Phase 2 (Frontend Core Development), and are now in Phase 3 focusing on backend infrastructure.

## Key Features

- Trading Bot Management: Configure, deploy, and monitor trading strategies
- User Dashboard: Portfolio tracking and performance monitoring
- Market Data Integration: Real-time and historical market data
- Exchange Connectivity: Connect to multiple exchanges via API
- OMNI Token Rewards: Staking and reward programs

## Current Work Items

We are currently setting up the backend infrastructure, including:
- Database setup and configuration
- Authentication and authorization systems
- API endpoints for market data
- User management services
- API key management for exchanges

## Important Files

- Project management documentation is in `/project_management/`
- Feature reference files are in `/reference_files/`
- The database schema is defined in `/prisma/schema.prisma`
- Frontend components are in `/src/components/`
- Page components are in `/src/pages/`

## Getting Started

1. Review the project roadmap in `/project_management/project_roadmap.md`
2. Check current phase status in `/project_management/current_phase.md`
3. Set up your development environment with the dependencies in `package.json`
4. Start the development server with `bun run dev`
To contribute, please follow the coding standards in `/project_management/coding_standards.md`

---

## Authentication Provider Setup & Migration Status

The platform supports both **Supabase** and **Firebase** for authentication.
- The active provider is controlled by the `VITE_AUTH_PROVIDER` variable in your `.env` file (`supabase` or `firebase`).
- Both sets of environment variables are present in `.env` for compatibility.
- See `README.md` and `project_management/authentication_flow.md` for setup instructions and migration notes.

**Migration Status:**
- The project is transitioning from Supabase to Firebase authentication.
- Supabase documentation and configuration remain for reference.
- When switching providers, update `VITE_AUTH_PROVIDER` and the relevant variables, then restart the dev server.

To contribute, please follow the coding standards in `/project_management/coding_standards.md`
